// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  githubId     Int         @unique
  githubHandle String      @db.VarChar(255)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  claims       Claim[]
  authTokens   AuthToken[]
}

model Profile {
  id              Int            @id @default(autoincrement())
  address         String         @unique @db.VarChar(255)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  bio             String
  bannerImageUrl  String?        @db.VarChar(255)
  name            String?        @db.VarChar(255)
  profileImageUrl String?        @db.VarChar(255)
  twitterHandle   String?        @db.VarChar(255)
  personalSiteUrl String?        @db.VarChar(255)
  featuredPOAPs   FeaturedPOAP[]
}

model Organization {
  id          Int      @id @default(autoincrement())
  githubOrgId Int      @unique
  name        String   @db.VarChar(50)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  repos       Repo[]
}

model Repo {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(50)
  githubRepoId   Int           @unique
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  organizationId Int
  Organization   Organization? @relation(fields: [organizationId], references: [id])
  gitPOAPs       GitPOAP[]
}

model Claim {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  status       ClaimStatus   @default(UNCLAIMED)
  poapTokenId  String?       @unique @db.VarChar(255)
  address      String?       @db.VarChar(255)
  gitPOAPId    Int
  gitPOAP      GitPOAP       @relation(fields: [gitPOAPId], references: [id])
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  featuredPOAP FeaturedPOAP?
}

model GitPOAP {
  id          Int       @id @default(autoincrement())
  type        ClaimType @default(ANNUAL)
  year        Int
  poapEventId Int       @unique
  repoId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  repo        Repo      @relation(fields: [repoId], references: [id])
  claims      Claim[]
  poapSecret  String
  poapQRHash  String
}

model AuthToken {
  id               Int    @id @default(autoincrement())
  generation       Int    @default(0)
  githubOAuthToken String
  githubId         Int
  user             User   @relation(fields: [githubId], references: [githubId])
}

model FeaturedPOAP {
  id          Int     @id @default(autoincrement())
  poapTokenId String  @unique @db.VarChar(255)
  claim       Claim?  @relation(fields: [poapTokenId], references: [poapTokenId])
  profileId   Int
  profile     Profile @relation(fields: [profileId], references: [id])
  // Required to avoid dumb bug: https://github.com/prisma/prisma/issues/4004
  dummyField  String?

  @@unique([poapTokenId, profileId])
}

enum ClaimStatus {
  UNCLAIMED
  PENDING
  CLAIMED
}

enum ClaimType {
  ANNUAL
  QUARTERLY
  MANUAL
}
